// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Space {
  id            String           @id @unique @default(cuid())
  company_name  String?          @db.VarChar(255)
  name          String?          @db.VarChar(255)
  description   String?          @db.VarChar(1000)
  email         String           @unique @db.VarChar(255)
  status        SpaceStatus      @default(PENDING)
  reject_reason String?
  logo_url      String?          @db.VarChar(255)
  banner        String?          @db.VarChar(255)
  category      String?
  created_at    DateTime         @default(now())
  updated_at    DateTime         @updatedAt
  created_by    String
  updated_by    String
  links         SpaceLinks[]     @relation("SpaceLinks")
  documents     SpaceDocuments[] @relation("SpaceToDocuments")
  quests        Quest[]          @relation("SpaceToQuest")
  token         Token[]          @relation("Token")
}

model Token {
  id          Int       @id @default(autoincrement())
  token       String    @unique
  status      KeyStatus
  expire_time DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  Space       Space?    @relation("Token", fields: [space_id], references: [id])
  space_id    String?
}

enum KeyStatus {
  EXPIRED
  ACTIVE
}

model SpaceLinks {
  id         String   @id @unique @default(cuid())
  link       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  created_by String
  updated_by String
  space      Space    @relation("SpaceLinks", fields: [space_id], references: [id])
  space_id   String
}

model SpaceDocuments {
  id         String   @id @unique @default(cuid())
  space_id   String
  space      Space    @relation("SpaceToDocuments", fields: [space_id], references: [id])
  path       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  created_by String
  updated_by String
}

model Quest {
  id                String        @id @unique @default(cuid())
  space_id          String
  title             String        @db.VarChar(255)
  description       String        @db.VarChar(1000)
  participant_limit Int
  max_reward_point  Int
  end_date          DateTime
  reattempt         Int
  status            QuestStatus
  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt
  space             Space         @relation("SpaceToQuest", fields: [space_id], references: [id])
  template          QuestTemplate @relation(fields: [template_id], references: [id])
  template_id       String        @unique
}

model QuestTemplate {
  id            String                @id @unique @default(cuid())
  template_name String                @db.VarChar(255)
  description   String                @db.Text
  category      QuestTemplateCategory
  created_at    DateTime              @default(now())
  updated_at    DateTime              @updatedAt
  quest         Quest?                @relation
}

enum SpaceStatus {
  PENDING
  REVIEW
  APPROVED
  REJECTED
}

enum QuestStatus {
  DRAFTED
  INITIATED
  SCHEDULED
  PAUSED
  RUNNING
  ENDED
}

enum QuestTemplateCategory {
  GENERAL
  TIMED
  MINI_GAMES
  VOTE
}
